#pragma once

#include <vector>
#include <Eigen/Dense>

void constructM_N2(const std::vector<Eigen::MatrixXd> &a, const std::vector<Eigen::VectorXd> &b, const std::vector<double> &c, const Eigen::VectorXd& u, Eigen::MatrixXd& M) {
    M(0,0) = u(0);
    M(0,1) = u(1);
    M(0,2) = u(2);
    M(1,1) = u(0);
    M(1,3) = u(2);
    M(1,5) = u(1);
    M(2,2) = u(0);
    M(2,3) = u(1);
    M(2,8) = u(2);
    M(3,3) = u(0);
    M(3,4) = u(1);
    M(3,7) = u(2);
    M(4,2) = 1*c[0];
    M(4,3) = 1*b[0](0);
    M(4,4) = 1*a[0](0,0);
    M(4,7) = 1*a[0](0,1) + 1*a[0](1,0);
    M(4,8) = 1*b[0](1);
    M(4,9) = 1*a[0](1,1);
    M(5,0) = 1*c[0];
    M(5,1) = 1*b[0](0);
    M(5,2) = 1*b[0](1);
    M(5,3) = 1*a[0](0,1) + 1*a[0](1,0);
    M(5,5) = 1*a[0](0,0);
    M(5,8) = 1*a[0](1,1);
    M(6,1) = 1*c[0];
    M(6,3) = 1*b[0](1);
    M(6,4) = 1*a[0](0,1) + 1*a[0](1,0);
    M(6,5) = 1*b[0](0);
    M(6,6) = 1*a[0](0,0);
    M(6,7) = 1*a[0](1,1);
    M(7,1) = 1*c[1];
    M(7,3) = 1*b[1](1);
    M(7,4) = 1*a[1](0,1) + 1*a[1](1,0);
    M(7,5) = 1*b[1](0);
    M(7,6) = 1*a[1](0,0);
    M(7,7) = 1*a[1](1,1);
    M(8,0) = 1*c[1];
    M(8,1) = 1*b[1](0);
    M(8,2) = 1*b[1](1);
    M(8,3) = 1*a[1](0,1) + 1*a[1](1,0);
    M(8,5) = 1*a[1](0,0);
    M(8,8) = 1*a[1](1,1);
    M(9,2) = 1*c[1];
    M(9,3) = 1*b[1](0);
    M(9,4) = 1*a[1](0,0);
    M(9,7) = 1*a[1](0,1) + 1*a[1](1,0);
    M(9,8) = 1*b[1](1);
    M(9,9) = 1*a[1](1,1);
}